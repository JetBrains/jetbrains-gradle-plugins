[
    {
        "name": "io.ktor.utils.io.ClosedWriteChannelException",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ],
        "allDeclaredFields": true,
        "queryAllPublicConstructors": true
    },
    {
        "name": "java.io.FilePermission"
    },
    {
        "name": "java.lang.Exception",
        "allDeclaredFields": true
    },
    {
        "name": "java.lang.IllegalStateException",
        "allDeclaredFields": true
    },
    {
        "name": "java.lang.Object",
        "allDeclaredFields": true
    },
    {
        "name": "java.lang.RuntimeException",
        "allDeclaredFields": true
    },
    {
        "name": "java.lang.RuntimePermission"
    },
    {
        "name": "java.lang.Throwable",
        "allDeclaredFields": true
    },
    {
        "name": "java.net.NetPermission"
    },
    {
        "name": "java.net.SocketPermission"
    },
    {
        "name": "java.net.StandardSocketOptions"
    },
    {
        "name": "java.net.URLPermission",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String",
                    "java.lang.String"
                ]
            }
        ]
    },
    {
        "name": "java.security.AllPermission"
    },
    {
        "name": "java.security.SecurityPermission"
    },
    {
        "name": "java.util.PropertyPermission"
    },
    {
        "name": "java.util.concurrent.CancellationException",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                    "java.lang.String"
                ]
            }
        ],
        "allDeclaredFields": true,
        "queryAllPublicConstructors": true
    },
    {
        "name": "kotlin.internal.jdk8.JDK8PlatformImplementations",
        "methods": [
            {
                "name": "<init>",
                "parameterTypes": [
                ]
            }
        ]
    },
    {
        "name" : "io.ktor.network.selector.InterestSuspensionsMap",
        "allDeclaredFields": true,
        "allDeclaredMethods": true,
        "allDeclaredConstructors": true,
        "queryAllDeclaredMethods": true,
        "queryAllDeclaredConstructors": true,
        "queryAllPublicMethods": true,
        "queryAllPublicConstructors": true
    },
    {
        "name": "kotlinx.coroutines.debug.internal.DebugProbesImpl$SequenceNumberRefVolatile",
        "fields": [
            {
                "name": "sequenceNumber"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.scheduling.CoroutineScheduler",
        "fields": [
            {
                "name": "parkedWorkersStack"
            },
            {
                "name": "controlState"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.internal.LockFreeTaskQueue",
        "fields": [
            {
                "name": "_cur"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.internal.LockFreeTaskQueueCore",
        "fields": [
            {
                "name": "_next"
            },
            {
                "name": "_state"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.EventLoopImplBase",
        "fields": [
            {
                "name": "_queue"
            },
            {
                "name": "_delayed"
            }
        ]
    },
    {
        "name": "io.ktor.network.selector.LockFreeMPSCQueue",
        "fields": [
            {
                "name": "_cur"
            }
        ]
    },
    {
        "name": "io.ktor.network.selector.LockFreeMPSCQueueCore",
        "fields": [
            {
                "name": "_next"
            },
            {
                "name": "_state"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.JobSupport",
        "fields": [
            {
                "name": "_state"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.internal.DispatchedContinuation",
        "fields": [
            {
                "name": "_reusableCancellableContinuation"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.scheduling.WorkQueue",
        "fields": [
            {
                "name": "lastScheduledTask"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.sync.SemaphoreImpl",
        "fields": [
            {
                "name": "head"
            },
            {
                "name": "deqIdx"
            },
            {
                "name": "tail"
            },
            {
                "name": "enqIdx"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.internal.ConcurrentLinkedListNode",
        "fields": [
            {
                "name": "_next"
            },
            {
                "name": "_prev"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.internal.LockFreeLinkedListNode",
        "fields": [
            {
                "name": "_next"
            },
            {
                "name": "_prev"
            },
            {
                "name": "_removedRef"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.internal.AtomicOp",
        "fields": [
            {
                "name": "_consensus"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.CancellableContinuationImpl",
        "fields": [
            {
                "name": "_state"
            }
        ]
    },
    {
        "name": "io.ktor.util.collections.CopyOnWriteHashMap",
        "fields": [
            {
                "name": "current"
            }
        ]
    },
    {
        "name": "io.ktor.utils.io.core.internal.ChunkBuffer",
        "fields": [
            {
                "name": "nextRef"
            }
        ]
    },
    {
        "name": "kotlinx.coroutines.channels.AbstractSendChannel",
        "fields": [
            {
                "name": "onCloseHandler"
            }
        ]
    },
    {
        "name": "io.ktor.network.selector.InterestSuspensionsMap",
        "fields": [
            {
                "name": "readHandlerReference"
            },
            {
                "name": "writeHandlerReference"
            },
            {
                "name": "acceptHandlerReference"
            },
            {
                "name": "connectHandlerReference"
            }
        ]
    },
    {
        "name": "io.ktor.utils.io.ByteBufferChannel",
        "fields": [
            {
                "name": "_state"
            },
            {
                "name": "_closed"
            },
            {
                "name": "_readOp"
            },
            {
                "name": "_writeOp"
            }
        ]
    },
    {
        "name": "io.ktor.utils.io.pool.DefaultPool",
        "fields": [
            {
                "name": "top"
            }
        ]
    },
    {
        "name": "io.ktor.utils.io.internal.CancellableReusableContinuation",
        "fields": [
            {
                "name": "state"
            },
            {
                "name": "jobCancellationHandler"
            }
        ]
    },
    {
        "name": "kotlin.SafePublicationLazyImpl",
        "fields": [
            {
                "name": "_value"
            }
        ]
    }
]