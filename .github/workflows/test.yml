name: Test plugins
on: [ push, pull_request ]
jobs:
  run-gradle:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        java-version: [ 11, 17 ]
        gradle-version: [ 7.6, current ]
    name: ${{ matrix.os }}, Java ${{ matrix.java-version }}, Gradle ${{ matrix.gradle-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}

      # Docker tests
      - name: Docker CLI test
        uses: gradle/gradle-build-action@v2
        id: docker-cli
        env:
          CONTAINER_REGISTRY_IMAGE_PREFIX: ${{secrets.CONTAINER_REGISTRY_IMAGE_PREFIX}}
          CONTAINER_REGISTRY_SECRET: ${{secrets.CONTAINER_REGISTRY_SECRET}}
          CONTAINER_REGISTRY_URL: ${{secrets.CONTAINER_REGISTRY_URL}}
          CONTAINER_REGISTRY_USERNAME: ${{secrets.CONTAINER_REGISTRY_USERNAME}}
        with:
          arguments: dockerPush
          gradle-version: ${{ matrix.gradle-version }}

      - name: Docker REST API test
        uses: gradle/gradle-build-action@v2
        id: docker-rest
        if: matrix.os != 'windows-latest'
        env:
          USE_DOCKER_REST: true
          CONTAINER_REGISTRY_IMAGE_PREFIX: ${{secrets.CONTAINER_REGISTRY_IMAGE_PREFIX}}
          CONTAINER_REGISTRY_SECRET: ${{secrets.CONTAINER_REGISTRY_SECRET}}
          CONTAINER_REGISTRY_URL: ${{secrets.CONTAINER_REGISTRY_URL}}
          CONTAINER_REGISTRY_USERNAME: ${{secrets.CONTAINER_REGISTRY_USERNAME}}
        with:
          arguments: dockerPush
          gradle-version: ${{ matrix.gradle-version }}

      # liquibase tests
      - name: Liquibase test
        uses: gradle/gradle-build-action@v2
        id: liquibase
        if: ${{ always() }}
        with:
          arguments: liquibaseUpdate
          gradle-version: ${{ matrix.gradle-version }}

      # terraform tests
      - name: Terraform test
        uses: gradle/gradle-build-action@v2
        if: ${{ always() }}
        id: terraform
        with:
          arguments: terraformInit
          gradle-version: ${{ matrix.gradle-version }}
