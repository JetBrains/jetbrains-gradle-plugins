name: Test plugins
on: [ push ]
jobs:
  run-gradle:
    runs-on: ubuntu-latest
    name: Run Ci tests
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 16

      # Docker tests
      - name: Docker CLI test
        uses: gradle/gradle-build-action@v1
        id: docker-cli
        env:
          CONTAINER_REGISTRY_IMAGE_PREFIX: ${{secrets.CONTAINER_REGISTRY_IMAGE_PREFIX}}
          CONTAINER_REGISTRY_SECRET: ${{secrets.CONTAINER_REGISTRY_SECRET}}
          CONTAINER_REGISTRY_URL: ${{secrets.CONTAINER_REGISTRY_URL}}
          CONTAINER_REGISTRY_USERNAME: ${{secrets.CONTAINER_REGISTRY_USERNAME}}
        with:
          arguments: dockerPush
      - name: Publish 'Docker CLI test' annotation
        run: 'echo "::warning::Docker CLI test build scan: ${{ steps.docker-cli.outputs.build-scan-url }}"'
        if: steps.docker-cli.outputs.exit_code == 0

      - name: Docker REST API test
        uses: gradle/gradle-build-action@v1
        id: docker-rest
        if: matrix.os != 'windows-latest'
        env:
          USE_DOCKER_REST: true
          CONTAINER_REGISTRY_IMAGE_PREFIX: ${{secrets.CONTAINER_REGISTRY_IMAGE_PREFIX}}
          CONTAINER_REGISTRY_SECRET: ${{secrets.CONTAINER_REGISTRY_SECRET}}
          CONTAINER_REGISTRY_URL: ${{secrets.CONTAINER_REGISTRY_URL}}
          CONTAINER_REGISTRY_USERNAME: ${{secrets.CONTAINER_REGISTRY_USERNAME}}
        with:
          arguments: dockerPush
      - name: Publish 'Docker REST API' annotation
        run: 'echo "::warning::Docker REST API test build scan: ${{ steps.docker-rest.outputs.build-scan-url }}"'
        if: matrix.os != 'windows-latest' && steps.docker-rest.outputs.exit_code == 0

      # liquibase tests
      - name: Liquibase test
        uses: gradle/gradle-build-action@v1
        id: liquibase
        if: ${{ always() }}
        with:
          arguments: liquibaseUpdate
      - name: Publish Liquibase annotation
        run: 'echo "::warning::Liquibase test build scan: ${{ steps.liquibase.outputs.build-scan-url }}"'
        if: steps.liquibase.outputs.exit_code == 0

      # terraform tests
      - uses: gradle/gradle-build-action@v1
        name: Terraform test
        if: ${{ always() }}
        id: terraform
        with:
          arguments: terraformMainInit
      - name: Publish Terraform annotation
        run: 'echo "::warning::Terraform test build scan: ${{ steps.terraform.outputs.build-scan-url }}"'
        if: steps.terraform.outputs.exit_code == 0
